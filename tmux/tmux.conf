# stuff for colors
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color*:Tc"

# start window and pane indexes at 1 to map more to keyboard layout
set-option -g base-index 1
set-option -g pane-base-index 1

#enable mouse support
set-option -g mouse on

# so that it doesn't take us as long to exit insert mode in vim
set-option -s escape-time 0

# make sure we use vim style bindings in copy mode
set-option -g mode-keys vi
set-option -g status-keys vi

# when a window is closed automatically renumber remaining windows
set-option -g renumber-windows on

# prevent control d from killing tmux session
# bind-key -n C-d detach

# vim style pane selection
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# vim style pane splitting
unbind-key '"'
unbind-key '%'
bind-key v split-window -h
bind-key s split-window -v

# vim style copy mode yank (does clear)
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel
# rebind copy mode enter to not clear
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-no-clear

# still allow option to interactively choose sessions, windows, and panes
bind-key S choose-tree -swZ

# allow for easy closing of panes similar to vim's :q
bind-key q confirm-before -p "kill pane #P? (y/n)" "kill-pane"
# quickly kill a pane using its index
bind-key x display-panes \; command-prompt -1 -p "kill this pane:" "kill-pane -t '%%'"

# rebind to allow for displaying of pane indicies
bind-key i display-panes
set-option -g display-panes-time 1000

# quickly send panes to other windows or sessions
bind-key w choose-tree -Zw "join-pane -t '%%'"

# easily reload config
bind-key r source-file ~/.tmux.conf

# close all other panes, like vim's :on
bind-key o confirm-before -p "kill all other panes? (y/n)" 'kill-pane -a'

# swap current pane with chosen pane
bind-key t display-panes \; command-prompt -1 -p "swap current pane #P with pane:" "swap-pane -s '!' -t '%%'"
# swap first chosen pane with second chosen pane
bind-key T display-panes \; command-prompt -p "swap this pane:, with this pane:" "swap-pane -s '%%' -t '%2'"

# quickly move current pane into selected pane side-by-side
# currently I think that what tmux does to fill up the empty space
# is to fill it up with whatever pane has a lower index number or the only pane left
bind-key m display-panes \; command-prompt -1 -p "move current pane side-by-side into pane:" "move-pane -h -s '!' -t '.%%'"
# quickly move current pane stacked under selected pane
bind-key M display-panes \; command-prompt -1 -p "move current pane stacked under pane:" "move-pane -v -s '!' -t '.%%'"

# break current pane out to a new window
bind-key b break-pane

# quickly change session working directory to current directory
bind-key a attach-session -c "#{pane_current_path}"





unbind-key -T root C-r
unbind-key -T remote-key-table C-r
unbind-key -T root C-.
unbind-key -T remote-key-table C-.

bind-key -T root C-^ \
  set-option prefix None \;\
  set-option key-table remote-key-table \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind-key -T remote-key-table C-^ \
  set-option -u prefix \;\
  set-option -u key-table \;\
  set-option -u status-style \;\
  set-option -u window-status-current-style \;\
  set-option -u window-status-current-format \;\
  refresh-client -S
 
is_remote_session="#([ $(tmux show-option -qv key-table) = 'remote-key-table' ] && echo 'REMOTE')#[default]"

set-option -g status-right "$is_remote_session"

# bind-key -T root R  \
#   set-option prefix None \;\
#   set-option key-table off \;\
#   set-option status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
#   set-option window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
#   set-option window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
#   if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
#   refresh-client -S \;\

# bind-key -T off R \
#   set-option -u prefix \;\
#   set-option -u key-table \;\
#   set-option -u status-style \;\
#   set-option -u window-status-current-style \;\
#   set-option -u window-status-current-format \;\
#   refresh-client -S
  
# wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

# set-option -g status-right "$wg_is_keys_off"







# List of plugins
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'christoomey/vim-tmux-navigator'

# Plugin options
set-option -g @continuum-save-interval '10'
set-option -g @continuum-restore 'on'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

# Install tpm and plugins if not on machine already
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm \
   ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
